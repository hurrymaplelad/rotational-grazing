package aph.grids{	import flash.geom.Point;	public class ParaGrid implements Grid{				protected var _rows:int;		protected var _columns:int;				/////////////////////////////////////		//		lean		//      ..._______________________		//       /          |  height   /		//      / angle     |          /		//     /____________|_________/		//               base		//		/////////////////////////////////////		protected var tileBase:Number;      		protected var tileHeight:Number;    		protected var tileAngle:Number;  // radians		protected var tileLean:Number;		                                    		/** CONSTRUCTOR **/		public function ParaGrid(rows:Number, columns:Number, 								tileBase:Number, tileHeight:Number, 								tileAngle:Number){			_rows = rows;			_columns = columns;			this.tileBase = tileBase;			this.tileHeight = tileHeight;			this.tileAngle = tileAngle;			tileLean = tileHeight/Math.tan(tileAngle);		}				public function tilePosition(gp:GridPoint):Point {			var x:Number = gp.c*tileBase + gp.r*tileLean;			var y:Number = -gp.r*tileHeight;			return new Point(x,y);		}				public function tileCenter(gp:GridPoint):Point {			var pos:Point = tilePosition(gp);			var mid:Point = new Point((tileBase+tileLean)/2,									   tileHeight/2);			return pos.add(mid);		}				public function toTile(p:Point):GridPoint{			var row:int = -p.y/tileHeight;			var col:int = (p.x-(row*tileLean))/tileBase;			return new GridPoint(row, col);		}				public function contains(gp:GridPoint):Boolean{			return (gp.r>=0 && gp.r<_rows &&					gp.c>=0 && gp.c<_columns);		}				/** ACCESSORS **/		public function get rows():int {			return _rows;		}				public function get columns():int {			return _columns;		}	}}